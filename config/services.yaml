# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Form\SituationType:
    App\Service\PDFparserService:
    admin.situation:
        class: App\Admin\SituationAdmin
        arguments: [~, App\Entity\Situation, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Configuration', label: Situations de travail }
    
    admin.risk:
        class: App\Admin\RiskAdmin
        arguments: [~, App\Entity\Risk, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Configuration', label: Risques associés}
    
    admin.measure:
        class: App\Admin\MeasureAdmin
        arguments: [~, App\Entity\Measure, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Configuration', label: Mesures }
    
    admin.app.ppsps:
        class: App\Admin\PpspsAdmin
        arguments: [~, App\Entity\Ppsps, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Gestion des PPSPS', label: PPSPS }
    admin.app.config:
        class: App\Admin\ConfigAdmin
        arguments: [~, App\Entity\Config, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Config, show_in_dashboard: false }
    admin.tool:
        class: App\Admin\ToolAdmin
        arguments: [~, App\Entity\Tool, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Configuration', label: Moyens et matériels }
    admin.dealer:
        class: App\Admin\DealerAdmin
        arguments: [~, App\Entity\Dealer, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Dealer, show_in_dashboard: false }
    admin.speaker:
        class: App\Admin\SpeakerAdmin
        arguments: [~, App\Entity\Speaker, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Speaker, show_in_dashboard: false }
    admin.effective:
        class: App\Admin\EffectiveAdmin
        arguments: [~, App\Entity\Effective, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Effective, show_in_dashboard: false }
    admin.updatePpsps:
        class: App\Admin\UpdatePpspsAdmin
        arguments: [~, App\Entity\UpdatePpsps, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: UpdatePpsps, show_in_dashboard: false }
    admin.diffusion:
        class: App\Admin\DiffusionAdmin
        arguments: [~, App\Entity\Diffusion, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Diffusion, show_in_dashboard: false }
    admin.workDirector:
        class: App\Admin\WorkDirectorAdmin
        arguments: [~, App\Entity\WorkDirector, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: WD, show_in_dashboard: false }
    admin.leader:
        class: App\Admin\LeaderAdmin
        arguments: [~, App\Entity\Leader, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Leader, show_in_dashboard: false }
    admin.SubcontractedWork:
        class: App\Admin\SubcontractedWorkAdmin
        arguments: [~, App\Entity\SubcontractedWork, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: SubcontractedWork, show_in_dashboard: false }
    admin.siteManager:
        class: App\Admin\SiteManagerAdmin
        arguments: [~, App\Entity\SiteManager, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: SiteManager, show_in_dashboard: false }
    admin.person:
        class: App\Admin\PersonAdmin
        arguments: [~, App\Entity\Person, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: Personnes, group: 'Gestion des PPSPS' }
    admin.annex:
        class: App\Admin\AnnexAdmin
        arguments: [~, App\Entity\Annex, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: Annexe, group: 'Configuration', show_in_dashboard: false }
    admin.users:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: Utilisateur, group: 'Gestion des utilisateurs', show_in_dashboard: true }
    admin.group:
        class: App\Admin\GroupmentAdmin
        arguments: [~, App\Entity\Groupment, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: Groupe, group: 'Gestion des utilisateurs', show_in_dashboard: true }
    admin.groupmentLogo:
        class: App\Admin\GroupmentLogoAdmin
        arguments: [~, App\Entity\GroupmentLogo, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: Logo des groupes, group: 'Gestion des utilisateurs', show_in_dashboard: true }
    admin.situationGroup:
        class: App\Admin\SituationGroupAdmin
        arguments: [~, App\Entity\SituationGroup, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: Groupe de situations, group: 'Configuration', show_in_dashboard: true }
    admin.ppspsImage:
        class: App\Admin\PpspsImageAdmin
        arguments: [~, App\Entity\PpspsImage, ~]
        tags:
          - { name: sonata.admin, manager_type: orm, label: Image du PPSPS, group: 'Gestion des PPSPS', show_in_dashboard: false }
    kernel.listener.doctrine:
        class: App\Listener\DoctrineListener
        public: false
        tags:
            - { name: doctrine.event_listener, event: preFlush, method: preFlush }
